apply plugin: 'idea'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'properties'
apply plugin: 'sonar-runner'

ext.versionProps = new Properties()
versionProps.load(new FileInputStream("version.properties"))
versionProps.each { versionProp ->
  ext.set(versionProp.key, versionProp.value)
}

idea.project.languageLevel = '1.8'
idea.project.jdkName = '1.8'

repositories {
    jcenter()
}
buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "net.saliman:gradle-cobertura-plugin:2.5.4"
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
    classpath "net.saliman:gradle-properties-plugin:1.4.2"
    classpath 'org.flywaydb:flyway-gradle-plugin:5.0.0'
  }
}
sonarRunner {
    sonarProperties {
	  property "sonar.host.url", "$sonarServer"
	  property "sonar.jdbc.url", "$sonarJdbc"
      property "sonar.projectVersion", "$sonarProjectVersion"
  }
}
subprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'properties'
  apply plugin: 'org.flywaydb.flyway'
  idea {
    project {
      ext.languageLevel = '1.8'
      ext.jdkName = '1.8'
    }
  }
  
  sonarRunner {
    sonarProperties {
	  property "sonar.junit.reportsPath", "$buildDir/test-results/"
	  property "sonar.java.coveragePlugin", "cobertura"
	  property "sonar.cobertura.reportPath", "$buildDir/reports/cobertura/coverage.xml"
    }
  }

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

  repositories {
    mavenCentral()
    maven {
      url "http://repo.springsource.org/plugins-release/"
    }
    maven { url "http://repo.spring.io/release" }
    maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/" }
    maven { url "http://jasperreports.sourceforge.net/maven2/" }
  }
  dependencies {
    compile 'cglib:cglib:3.2.8',
        'org.aspectj:aspectjrt:1.9.1',

        'org.springframework:spring-webmvc:5.1.0.RELEASE',
        'org.springframework:spring-core:5.1.0.RELEASE',
        'org.springframework:spring-web:5.1.0.RELEASE',
        'org.springframework:spring-aspects:5.1.0.RELEASE',
        //'org.springframework:spring-aop:5.1.0.RELEASE',
        'org.springframework:spring-messaging:5.1.0.RELEASE',
        'org.springframework:spring-context-support:5.1.0.RELEASE',
        'org.springframework:spring-tx:5.1.0.RELEASE',

        'org.springframework.security:spring-security-taglibs:5.1.0.RELEASE',
        'org.springframework.security:spring-security-core:5.1.0.RELEASE',
        'org.springframework.security:spring-security-web:5.1.0.RELEASE',
        'org.springframework.security:spring-security-config:5.1.0.RELEASE',

        'org.springframework.integration:spring-integration-core:5.0.8.RELEASE',
        'org.springframework.integration:spring-integration-jdbc:5.0.8.RELEASE',
        'org.springframework.integration:spring-integration-ftp:5.0.8.RELEASE',

        'xml-apis:xml-apis:2.0.2',
        'commons-collections:commons-collections:3.2.2',
        'org.apache.commons:commons-collections4:4.2',
        'javax.servlet:javax.servlet-api:4.0.1',

        'org.projectlombok:lombok:1.18.2',

        'com.fasterxml.jackson.core:jackson-databind:2.9.7',
        'com.fasterxml.jackson.core:jackson-core:2.9.7',
        'com.fasterxml.jackson.core:jackson-annotations:2.9.7',

        'javax.mail:javax.mail-api:1.6.2',
        'com.sun.mail:javax.mail:1.6.2',

        'commons-codec:commons-codec:1.11',
        'commons-lang:commons-lang:2.6',
      'commons-io:commons-io:2.6'

    testCompile 'junit:junit:4.12',
        'org.mockito:mockito-core:2.15.0',
      'org.hamcrest:hamcrest-all:1.3',
        'cglib:cglib-nodep:3.2.6',
        'org.powermock:powermock-module-junit4-rule-agent:1.7.4',
        'org.powermock:powermock-module-junit4-rule:1.7.4',
            'org.powermock:powermock-classloading-xstream:1.7.4',
        'org.powermock:powermock-module-junit4:1.7.4',
        'org.powermock:powermock-api-mockito:1.7.4',
        'com.natpryce:make-it-easy:4.0.1',
        'org.springframework:spring-test:5.1.0.RELEASE'
  }

  test {
    jvmArgs '-XX:-UseSplitVerifier', '-XX:MaxPermSize=256m'
    System.properties.get('environmentName', 'local')
    systemProperties System.properties
    systemProperty 'toggleOnCustom', toggleOnCustom
    useJUnit {
      includeCategories 'org.openlmis.db.categories.UnitTests'
      includeCategories 'org.openlmis.db.categories.IntegrationTests'
    }
  }

  task showMeCache << {
    configurations.compile.each { println it}
  }

  task IntegrationTests(type: Test) {
    jvmArgs '-XX:-UseSplitVerifier', '-XX:MaxPermSize=256m'
    System.properties.get('environmentName', 'local')
    systemProperties System.properties
    systemProperty 'toggleOnCustom', toggleOnCustom
    useJUnit {
      includeCategories 'org.openlmis.db.categories.IntegrationTests'
    }
  }

}

configure(subprojects.findAll { it.name != 'db' }) {
  dependencies {
    testCompile project(path: ':modules:db', configuration: 'testFixtures')
  }
}
